@startuml Game

package LTBs
{
    package Game
    {
        package Conponent
        {
            class Worker
            {
                -owner:Player
                +<<property>>Pos:Vector2
                +<<property>>Owner:Player
                +GetAroundBuildings():List<Tile>
            }
            class Tile
            {
                +<<property>>Id:string{private set}
                +<<property>>Name:string{private set}
                +<<property>>abilityText:string{private set}
                +<<property>>Points:int{private set}
                +<<property>>Pos:Vector2
                +<<property>>Owner:Player
                +<<property>>IsBuilded:bool{get only}
                +<<property>>IsGrassLand:bool{get only}
                +<<property>>IsPlayerPresent:bool{get only}
                +<<property>>BulidCost:List<ResourceType>{private set}
                +<<property>>AbilityCost:List<ResourceType>{private set}
                +<<property>>AbilityProfit:List<ResourceType>{private set}
                +Init():void
                +<<delegate>>Ability():void
                +NormalAbility:Ability
                +RoundEndAbility;Ability
                +GameEndAbility:Ability
            }
            class NormalAbilityUtil
            class RoundEndAbilityUtil
            class GameEndAbilityUtil
            class TileData
            {
                -id;string
                -name:string
                -abilityText:string
                -buildCost:List<ResourceType>
                -points:int
                +<<property>>Id:string{get only}
                +<<property>>Name:string{get only}
                +<<property>>AbilityText:string{get only}
                +<<property>>BulidCost:List<ResourceType>{get only}
                +<<property>>AbilityCost:List<ResourceType>{get only}
                +<<property>>AbilityProfit:List<ResourceType>{get only}
                +<<property>>Points:int{get only}
            }
            class Board
            class Resource
            {
                -PlayerNodePos:List<Vector2>
                -Speed:float
                -IsGet:bool
                -TargetPos:Vector3
                -TargetPlayer:Player
                -ResourceType:ResourceType
                +<<PunRPC>>Init():void
            }
            class TileController
        }

        enum ResourceType
        class TileFactory
        class ResourceFactory
        class WorkerFactory
    }
    package Network
    {
        package CustomProperties
        {
            package Players
            {
                class ColorExtensions
                class PlayerMoveExtensions
                class ResourceExtensions
                class WillBuildExtensions
                class WorkerNumExtensions
            }
            package Rooms
            {
                class BuildExtensions
                class BuildUpdateExtensions
                class MaxWorkerExtensions
                class RoundExtensions
                class TileExtensions
                class TurnCycleExtensions
                class TurnPlayerExtensions
                class WorkerExtensions
            }
        }
        package RaiseEvents
        {
            class ChangeBoardLayout
            class LoadGameScene
            class RaiseEventPractitioner
            enum RaiseEventType
            class RoundEnd
        }
    }
    package UI
    {
        class BoardSizeSelecter
        class BoardSelecter
        class BuildableListViewer
        {
            -Contents:GameObjct
            -Nodes:List<BuildingNode>
        }
        class BuildButton
        {
            +OnClick():void
        }
        class BuildingAbilityListViewer
        {
            -Contents:GameObjct
            -Nodes:List<BuildingNode>
            +Shoe():void
        }
        class BuildingNode
        {
            -buildingName:Text
            -buildingAbilityInfo:Text
            -owner:Text
            -ownerNameObj:GameObject
            -executeButton:Button
            -tile:Tile
            +<<property>>Tile:Tile{set only}
            +<<property>>TileId:int{get only}
            +<<property>>OwnerName:string{set only}
            +<<property>>OwnerNameObj:GameObject{get only}
            +<<property>>ExecuteButton:Button{get only}
            +<<property>>Executed:bool{get and private set}
            +ManagedUpdate():void
            +AbiliityActivate():void
        }
        class BuildingNodeFactory
        class CancelButton
        {
            +OnClick():void
        }
        class ColorFactory
        class CompletButton
        {
            +OnClick():void
        }
        class CompletedMarkFactory
        class ExchangeSelecter
        {
            -PResourceDds:GameObject
            -EResourceDds:GameObject
            -ExectueButton:Button
            -ExchangeResource:List<ResourceType>
            -PlayerResource:List<ResourceType>
            +Show():void
            +OnValueChnaged():void
            +Exchange():void
        }
        enum ExchangeType
        class FinishButton
        {
            OnClick():void
        }
        class FoodDistributionNode
        {
            -WorkerImage:Image
            -FishButton:Button
            -WheatButton:Button
            -go:GameObject
            +<<property>>IsDistributed:bool{get and private set}
            -CanDistribution(resourceType:ResourceType):bool
            -Distribution(resourceType:ResourceType):void
            +NonDistribution():void
            +ManagedUpdate():void
            +Reset():void
        }
        class FoodDistributionNodeFactory
        class FoodDistributionSelecter
        {
            -Contents:GameObject
            -Nodes:List<FoodDistributionNode>
            +Show():void
        }
        class GameOptionsViewer
        class GamePlayerFactory
        class GamePlayerListViewer
        class GamePlayerNode
        {
            -inChargePlayer:Player
            -outline:Outline
            -playerName:Text
            -wood:ResourceCounter
            -stone:ResourceCounter
            -fish:ResourceCounter
            -wheat:ResourceCounter
            -money:ResourceCounter
            -point:ResourceCounter
            -resource:Dictionary<ResourceType, int>
            +PlayerClor:Color
            +<<property>>InChargePlayer:Player{set only}
            +<<property>>PlayerResource:Dictionary<ResourceType, int>{get only}
        }
        class PlayerListViewer
        {
            -Contents:GameObject
            -RoomNameText:Text
            -DestroyAll():void
            -CreateAllPlayerNode:void
        }
        class PlayerNode
        {
            -PlayerNameText:Text
            +<<property>>PlayerName:string{set only}
        }
        class PlayerNodeFactory
        class RankingViewer
        {
            -Contents:GameObject
            -CreateRanking():List<Player>
            +Show():void
        }
        class ResourceCounter
        {
            -Index:Text
            +<<property>>Count:int{get and private set}
            -SetText():void
            +Set(index:int):void
        }
        class ResourceRoute
        {
            -PlayerNodePos:Dictionary<int, List<Vector3>>
            +SearchPlayerNodePos(playerCount:int):List<Vector3>
        }
        class RoundCounter
        {
            -NowRoundText:Text
            -MaxRoundText:Text
        }
        class TurnMoveSelecter
        {
            -BuildButton:GameObject
            -WorkButton:GameObject
            -CancelButton:GameObject
        }
        class WorkButton
        {
            OnClick():void
        }
    }
    package System
    {
        class Builder
        class CustomTypeRegister
        class DebugManager
        interface IFactory<T>
        {
            +Create(id:string):T
        }
        enum PlayerMoveType
        class TurnAndRoundManager
        class TurnCycle
    }
}

TileFactory ..|> IFactory
WorkerFactory ..|> IFactory
ResourceFactory ..|> IFactory
PlayerNodeFactory ..|> IFactory
GamePlayerFactory ..|> IFactory
CompletedMarkFactory ..|> IFactory
ColorFactory ..|> IFactory
BuildingNodeFactory ..|> IFactory
FoodDistributionNodeFactory ..|> IFactory

BuildingNodeFactory -- BuildingNode
FoodDistributionNodeFactory -- FoodDistributionNode
GamePlayerFactory -- GamePlayerNode
PlayerNodeFactory -- PlayerNode

BuildingNode "many"--"1" BuildingAbilityListViewer
BuildingNode "many"--"1" BuildableListViewer
FoodDistributionNode "many"--"1" FoodDistributionSelecter
GamePlayerNode "many"--"1" GamePlayerListViewer
GamePlayerNode "many"--"1" ResourceCounter
PlayerNode "many"--"1" PlayerListViewer
PlayerNode "many"--"1" RankingViewer

Resource - ResourceRoute

LoadGameScene --|> RaiseEventPractitioner
ChangeBoardLayout --|> RaiseEventPractitioner
RoundEnd --|> RaiseEventPractitioner

Tile - NormalAbilityUtil
Tile - RoundEndAbilityUtil
Tile - GameEndAbilityUtil

GameOptionsViewer -- BoardSelecter
GameOptionsViewer -- BoardSizeSelecter

@enduml